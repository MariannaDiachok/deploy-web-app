{
 "Resources": {
  "lambdaproductlistServiceRoleBE066A19": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ProductStack/lambda-product-list/ServiceRole/Resource"
   }
  },
  "lambdaproductlistBED16E08": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "0ac2ba35c0bd4a91fb0c1142b39f066d83e9aabd54f896ecdbccd41d04849658.zip"
    },
    "Environment": {
     "Variables": {
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "getProductList",
    "Handler": "index.getProductList",
    "MemorySize": 1024,
    "Role": {
     "Fn::GetAtt": [
      "lambdaproductlistServiceRoleBE066A19",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 5
   },
   "DependsOn": [
    "lambdaproductlistServiceRoleBE066A19"
   ],
   "Metadata": {
    "aws:cdk:path": "ProductStack/lambda-product-list/Resource",
    "aws:asset:path": "asset.0ac2ba35c0bd4a91fb0c1142b39f066d83e9aabd54f896ecdbccd41d04849658",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "lambdaproductbyidServiceRoleB9829211": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ProductStack/lambda-product-by-id/ServiceRole/Resource"
   }
  },
  "lambdaproductbyid996B6492": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "0ac2ba35c0bd4a91fb0c1142b39f066d83e9aabd54f896ecdbccd41d04849658.zip"
    },
    "Environment": {
     "Variables": {
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "getProductById",
    "Handler": "index.getProductById",
    "MemorySize": 1024,
    "Role": {
     "Fn::GetAtt": [
      "lambdaproductbyidServiceRoleB9829211",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 5
   },
   "DependsOn": [
    "lambdaproductbyidServiceRoleB9829211"
   ],
   "Metadata": {
    "aws:cdk:path": "ProductStack/lambda-product-by-id/Resource",
    "aws:asset:path": "asset.0ac2ba35c0bd4a91fb0c1142b39f066d83e9aabd54f896ecdbccd41d04849658",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "productsapi7D590FA8": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Description": "This Products-API serves the Lambda functions.",
    "Name": "Products API Gateway"
   },
   "Metadata": {
    "aws:cdk:path": "ProductStack/products-api/Resource"
   }
  },
  "productsapiDeployment21EB96E44a2c73789dc0532a3dc7a1a97fb66383": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "This Products-API serves the Lambda functions.",
    "RestApiId": {
     "Ref": "productsapi7D590FA8"
    }
   },
   "DependsOn": [
    "productsapiproductsproductidGET752017E7",
    "productsapiproductsproductidOPTIONS23F37165",
    "productsapiproductsproductid3AA710FE",
    "productsapiproductsGETCACF88FF",
    "productsapiproductsOPTIONSC2962435",
    "productsapiproductsD87799F9"
   ],
   "Metadata": {
    "aws:cdk:path": "ProductStack/products-api/Deployment/Resource"
   }
  },
  "productsapiDeploymentStageprod1993B0A7": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "productsapiDeployment21EB96E44a2c73789dc0532a3dc7a1a97fb66383"
    },
    "RestApiId": {
     "Ref": "productsapi7D590FA8"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "ProductStack/products-api/DeploymentStage.prod/Resource"
   }
  },
  "productsapiproductsD87799F9": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "productsapi7D590FA8",
      "RootResourceId"
     ]
    },
    "PathPart": "products",
    "RestApiId": {
     "Ref": "productsapi7D590FA8"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductStack/products-api/Default/products/Resource"
   }
  },
  "productsapiproductsGETApiPermissionProductStackproductsapiC3E8A07DGETproducts0172A148": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "lambdaproductlistBED16E08",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "productsapi7D590FA8"
       },
       "/",
       {
        "Ref": "productsapiDeploymentStageprod1993B0A7"
       },
       "/GET/products"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductStack/products-api/Default/products/GET/ApiPermission.ProductStackproductsapiC3E8A07D.GET..products"
   }
  },
  "productsapiproductsGETApiPermissionTestProductStackproductsapiC3E8A07DGETproducts8B22C4FD": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "lambdaproductlistBED16E08",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "productsapi7D590FA8"
       },
       "/test-invoke-stage/GET/products"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductStack/products-api/Default/products/GET/ApiPermission.Test.ProductStackproductsapiC3E8A07D.GET..products"
   }
  },
  "productsapiproductsGETCACF88FF": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'https://dz48wttf1vpfs.cloudfront.net'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE'"
       },
       "ResponseTemplates": {
        "application/json": "$util.parseJson($input.json('$.body'))"
       },
       "StatusCode": "200"
      }
     ],
     "Type": "AWS",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "lambdaproductlistBED16E08",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "200"
     }
    ],
    "ResourceId": {
     "Ref": "productsapiproductsD87799F9"
    },
    "RestApiId": {
     "Ref": "productsapi7D590FA8"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductStack/products-api/Default/products/GET/Resource"
   }
  },
  "productsapiproductsOPTIONSC2962435": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type'",
        "method.response.header.Access-Control-Allow-Origin": "'https://dz48wttf1vpfs.cloudfront.net'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "productsapiproductsD87799F9"
    },
    "RestApiId": {
     "Ref": "productsapi7D590FA8"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductStack/products-api/Default/products/OPTIONS/Resource"
   }
  },
  "productsapiproductsproductid3AA710FE": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "productsapiproductsD87799F9"
    },
    "PathPart": "{product_id}",
    "RestApiId": {
     "Ref": "productsapi7D590FA8"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductStack/products-api/Default/products/{product_id}/Resource"
   }
  },
  "productsapiproductsproductidGETApiPermissionProductStackproductsapiC3E8A07DGETproductsproductid92B42AB7": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "lambdaproductbyid996B6492",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "productsapi7D590FA8"
       },
       "/",
       {
        "Ref": "productsapiDeploymentStageprod1993B0A7"
       },
       "/GET/products/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductStack/products-api/Default/products/{product_id}/GET/ApiPermission.ProductStackproductsapiC3E8A07D.GET..products.{product_id}"
   }
  },
  "productsapiproductsproductidGETApiPermissionTestProductStackproductsapiC3E8A07DGETproductsproductid598FF6DB": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "lambdaproductbyid996B6492",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "productsapi7D590FA8"
       },
       "/test-invoke-stage/GET/products/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductStack/products-api/Default/products/{product_id}/GET/ApiPermission.Test.ProductStackproductsapiC3E8A07D.GET..products.{product_id}"
   }
  },
  "productsapiproductsproductidGET752017E7": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'https://dz48wttf1vpfs.cloudfront.net'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE'"
       },
       "ResponseTemplates": {
        "application/json": "$util.parseJson($input.json('$.body'))"
       },
       "StatusCode": "200"
      }
     ],
     "Type": "AWS",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "lambdaproductbyid996B6492",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "200"
     }
    ],
    "ResourceId": {
     "Ref": "productsapiproductsproductid3AA710FE"
    },
    "RestApiId": {
     "Ref": "productsapi7D590FA8"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductStack/products-api/Default/products/{product_id}/GET/Resource"
   }
  },
  "productsapiproductsproductidOPTIONS23F37165": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type'",
        "method.response.header.Access-Control-Allow-Origin": "'https://dz48wttf1vpfs.cloudfront.net'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "productsapiproductsproductid3AA710FE"
    },
    "RestApiId": {
     "Ref": "productsapi7D590FA8"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductStack/products-api/Default/products/{product_id}/OPTIONS/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1VQ2WrDMBD8lrzL2yah0NckpW89SD/AKPLWXduSjHfVEIz/vTrSCwRzMBoN2sB6ewe3K33myjR9NdAJ5jfRplfRqudB21Oja+cb7BieMzwGZ4S8U6QtzEc/oDq8u4SL4m2tmVEYdgmihn0wPcpeM6rSBnOM/5RE/oqTJeaoFqVHarXgWV9iNbLsRsrtV/qA4+AvFp0k94+Km9u8o5CY92EymJ/9Fteiwp9QPnyTrMKW5TeXt6cicm1KvAQZg/y7HvnBu4Ykr07/Ax3ffK7vIZ7NqmOiagpOyCIcC34B6kptcWwBAAA="
   },
   "Metadata": {
    "aws:cdk:path": "ProductStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "productsapiEndpoint053D11BE": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "productsapi7D590FA8"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "productsapiDeploymentStageprod1993B0A7"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}