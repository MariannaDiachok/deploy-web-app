{
 "Resources": {
  "lambdafunctionServiceRoleC60A9A75": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "HelloLambdaStack/lambda-function/ServiceRole/Resource"
   }
  },
  "lambdafunction841552AF": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "0caf2d1b7d7c40d78a63a58f056fd39359b0654f56f66aa1ad747e98914ae04e.zip"
    },
    "Handler": "handler.main",
    "MemorySize": 1024,
    "Role": {
     "Fn::GetAtt": [
      "lambdafunctionServiceRoleC60A9A75",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Timeout": 5
   },
   "DependsOn": [
    "lambdafunctionServiceRoleC60A9A75"
   ],
   "Metadata": {
    "aws:cdk:path": "HelloLambdaStack/lambda-function/Resource",
    "aws:asset:path": "asset.0caf2d1b7d7c40d78a63a58f056fd39359b0654f56f66aa1ad747e98914ae04e",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "myapi4C7BF186": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Description": "This API serves the Lambda functions.",
    "Name": "My API Gateway"
   },
   "Metadata": {
    "aws:cdk:path": "HelloLambdaStack/my-api/Resource"
   }
  },
  "myapiDeployment92F2CB49561080c6efbb0bfb33d2d38d65468b71": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "This API serves the Lambda functions.",
    "RestApiId": {
     "Ref": "myapi4C7BF186"
    }
   },
   "DependsOn": [
    "myapihelloGETD2CD4BC9",
    "myapihelloC0221829"
   ],
   "Metadata": {
    "aws:cdk:path": "HelloLambdaStack/my-api/Deployment/Resource"
   }
  },
  "myapiDeploymentStageprod298F01AF": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "myapiDeployment92F2CB49561080c6efbb0bfb33d2d38d65468b71"
    },
    "RestApiId": {
     "Ref": "myapi4C7BF186"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "HelloLambdaStack/my-api/DeploymentStage.prod/Resource"
   }
  },
  "myapihelloC0221829": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "myapi4C7BF186",
      "RootResourceId"
     ]
    },
    "PathPart": "hello",
    "RestApiId": {
     "Ref": "myapi4C7BF186"
    }
   },
   "Metadata": {
    "aws:cdk:path": "HelloLambdaStack/my-api/Default/hello/Resource"
   }
  },
  "myapihelloGETApiPermissionHelloLambdaStackmyapi753FEE88GEThelloD3B44975": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "lambdafunction841552AF",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "myapi4C7BF186"
       },
       "/",
       {
        "Ref": "myapiDeploymentStageprod298F01AF"
       },
       "/GET/hello"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "HelloLambdaStack/my-api/Default/hello/GET/ApiPermission.HelloLambdaStackmyapi753FEE88.GET..hello"
   }
  },
  "myapihelloGETApiPermissionTestHelloLambdaStackmyapi753FEE88GEThello0A35DC0A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "lambdafunction841552AF",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "myapi4C7BF186"
       },
       "/test-invoke-stage/GET/hello"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "HelloLambdaStack/my-api/Default/hello/GET/ApiPermission.Test.HelloLambdaStackmyapi753FEE88.GET..hello"
   }
  },
  "myapihelloGETD2CD4BC9": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "lambdafunction841552AF",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "myapihelloC0221829"
    },
    "RestApiId": {
     "Ref": "myapi4C7BF186"
    }
   },
   "Metadata": {
    "aws:cdk:path": "HelloLambdaStack/my-api/Default/hello/GET/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1VP0U7DMAz8lr2nhm1C4nUb2hsCjQ+YvMQUr21S1Q7TVPXfSdIhhhTp7py7i7OC5foJHhd4kcq6pmr5BOOHom1MGh3HFruTQxj30Vvl4M3u09/zdxo6FklqMowdjIfQUr7IOBlZH1GEVGCTIWnYRtuQblHIYM81Kl3wmnIkuum5RG/0hfo2XDvymqd3Ku1Xl0dmkvwhDpZK56+4Fc38lfQruDya2TT9+cpiuYh9nR1vUfuo/+KJ74J3rOWbPjiCszx8L58hndXiLMzVEL1yR3CY8QdXx8ZeWAEAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "HelloLambdaStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "myapiEndpoint3628AFE3": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "myapi4C7BF186"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "myapiDeploymentStageprod298F01AF"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}